name: CICD using ngrok

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning the repo
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          push: true
          tags: aayush786/django-helloworld-frontend:latest

  backend-build:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Cloning the repo
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          push: true
          tags: aayush786/django-helloworld-backend:latest

  deployment:
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - name: Deploy using ngrok tunnel
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.NGROK_HOST }}  # e.g., 0.tcp.in.ngrok.io
          port: ${{ secrets.NGROK_PORT }}  # e.g., 10237
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          
          ssh_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
          script: |
            cd /Users/aayush || {
              git clone git@github.com:aayush786-21/django-next-js-postgres-deployment.git
              cd django-next-js-postgres-deployment
            }
            git pull origin main
            docker pull aayush786/django-helloworld-frontend:latest
            docker pull aayush786/django-helloworld-backend:latest
            docker compose up -d
